<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:7c4e75b7-a989-44b3-bd0e-be89ef89fb8c -->
<metadata name="documentationDriverWrapper" path="/shared/Anubhav/PeiYingHoo/fe_edm/_script/Documentation/documentationDriverWrapper" type="PROCEDURE" subtype="SQL_SCRIPT_PROCEDURE" changeToken="0">
  <annotation>&lt;![CDATA[documentationDriverWrapper:

&#x9;This procedure provides a generic wrapper around the utilities documentation driver so that it can get
&#x9;&#x9;specific project-level input values for the documentation driver using the local project constants procedure.
 
&#x9;Input:
 &#x9;&#x9;defaultValuesLayerConstantName&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The layer type constant name from defaultValues at which to begin generating documentation.
&#x9;&#x9;subLayerPartialPath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- This sub-layer path gets appended to the result of the default values layer path that gets returned.
&#x9;&#x9;documentationFileName&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The name of the output documentation file.  The path is defined in the documentation constants.
&#x9;&#x9;in_switches&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;&#x9;in_excludeKeywordsInPathList&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;&#x9;in_excludePathsList&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;Output:
&#x9;&#x9;NONE

&#x9;Modified Date:&#x9;Updated By:&#x9;&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;07/26/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.]]&gt;</annotation>
  <parameters>
    <parameter name="defaultValuesLayerConstantName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="subLayerPartialPath" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="4000"/>
    </parameter>
    <parameter name="documentationFileName" direction="IN" nullable="true">
      <datatype name="VARCHAR" type="STRING" maxLength="255"/>
    </parameter>
    <parameter name="in_switches" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="in_excludeKeywordsInPathList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
    <parameter name="in_excludePathsList" direction="IN" nullable="true">
      <datatype name="LONGVARCHAR" type="STRING" maxLength="2147483647"/>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
  </security>
  <dependency target="/lib/resource/ResourceExists" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/documentation/getDocumentationDriver" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/repository/getBasicResourceCursor" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/ASAssets/Utilities/string/getConstantV2" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Anubhav/PeiYingHoo/fe_edm/_script/Documentation/constants" type="PROCEDURE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <dependency target="/shared/Anubhav/PeiYingHoo/fe_edm/_script/Documentation/constants" type="DEFINITION_SET">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="Script" type="STRING">/* &#x9;
&#x9;documentationDriverWrapper:

&#x9;This procedure provides a generic wrapper around the utilities documentation driver so that it can get
&#x9;&#x9;specific project-level input values for the documentation driver using the local project constants procedure.
 
&#x9;Input:
 &#x9;&#x9;defaultValuesLayerConstantName&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The layer type constant name from defaultValues at which to begin generating documentation.
&#x9;&#x9;subLayerPartialPath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- This sub-layer path gets appended to the result of the default values layer path that gets returned.
&#x9;&#x9;documentationFileName&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The name of the output documentation file.  The parent path is defined in the documentation constants.
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;The parent path is concatenated with this value to provide the full path of the file.
&#x9;&#x9;in_switches&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;&#x9;in_excludeKeywordsInPathList&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;&#x9;in_excludePathsList&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;Output:
&#x9;&#x9;NONE

&#x9;Modified Date:&#x9;Updated By:&#x9;&#x9;&#x9;CSW Version:&#x9;Reason:
&#x9;07/26/2019&#x9;&#x9;Mike Tinius&#x9;&#x9;&#x9;7.0.8&#x9;&#x9;&#x9;Created new

&#x9;(c) 2017 TIBCO Software Inc.  All rights reserved.
&#x9;
&#x9;Except as specified below, this software is licensed pursuant to the Eclipse Public License v. 1.0.
&#x9;The details can be found in the file LICENSE.
&#x9;
&#x9;The following proprietary files are included as a convenience, and may not be used except pursuant
&#x9;to valid license to Composite Information Server or TIBCO® Data Virtualization Server:
&#x9;csadmin-XXXX.jar, csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar,
&#x9;csext-XXXX.jar, csjdbc-XXXX.jar, csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar,
&#x9;and customproc-XXXX.jar (where -XXXX is an optional version number).  Any included third party files
&#x9;are licensed under the terms contained in their own accompanying LICENSE files, generally named .LICENSE.txt.
&#x9;
&#x9;This software is licensed AS-IS. Support for this software is not covered by standard maintenance agreements with TIBCO.
&#x9;If you would like to obtain assistance with this software, such assistance may be obtained through a separate paid consulting
&#x9;agreement with TIBCO.

*/
PROCEDURE documentationDriverWrapper(
&#x9;IN defaultValuesLayerConstantName&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The layer type constant name from defaultValues at which to begin generating documentation.
&#x9;IN subLayerPartialPath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000),&#x9;-- This sub-layer path gets appended to the result of the default values layer path that gets returned.
&#x9;IN documentationFileName&#x9;&#x9;&#x9;&#x9;VARCHAR,&#x9;&#x9;-- The name of the output documentation file.  The path is defined in the documentation constants.
&#x9;IN in_switches&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;IN in_excludeKeywordsInPathList&#x9;&#x9;&#x9;LONGVARCHAR,&#x9;-- If left null, the default in the constants file will be used if applicable.
&#x9;IN in_excludePathsList&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR&#x9;&#x9;-- If left null, the default in the constants file will be used if applicable.
)
BEGIN
&#x9;DECLARE moduleName&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR DEFAULT &apos;documentationDriverWrapper&apos;;
&#x9;DECLARE debug&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CHAR(1) DEFAULT &apos;N&apos;;
&#x9;DECLARE defaultValuesPath&#x9;&#x9;&#x9;&#x9;VARCHAR(4000) DEFAULT /shared/Anubhav/PeiYingHoo/fe_edm/&quot;_script&quot;/Documentation/constants.defaultValuesPath;
&#x9;DECLARE defaultValuesLayerConstantName_&#x9;VARCHAR DEFAULT defaultValuesLayerConstantName;
&#x9;DECLARE switches&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT in_switches;
&#x9;DECLARE excludeKeywordsInPathList&#x9;&#x9;LONGVARCHAR DEFAULT in_excludeKeywordsInPathList;
&#x9;DECLARE excludePathsList&#x9;&#x9;&#x9;&#x9;LONGVARCHAR DEFAULT in_excludePathsList;
&#x9;DECLARE documentationConstantsPath&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE layerResourcePath&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE layerResourceType&#x9;&#x9;&#x9;&#x9;VARCHAR;
&#x9;DECLARE docPreambleImpl&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE docResourceFormatImpl&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE parentFilePath&#x9;&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE documentationPath&#x9;&#x9;&#x9;&#x9;VARCHAR(4000);
&#x9;DECLARE resExists&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;BOOLEAN;
&#x9;DECLARE message&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;LONGVARCHAR;
&#x9;DECLARE ex&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXCEPTION;

&#x9;-- Validate defaultValuesPath
&#x9;IF (defaultValuesPath IS NULL OR LENGTH(defaultValuesPath) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;/Documentation/constants.defaultValuesPath&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;CALL /lib/resource/ResourceExists(defaultValuesPath, &apos;PROCEDURE&apos;, null, resExists);
&#x9;IF (NOT resExists) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;/Documentation/constants.defaultValuesPath&quot; does not exist.  defaultValuesPath=&apos;||NVL(defaultValuesPath,&apos;null&apos;);
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: defaultValuesPath=[&apos;||defaultValuesPath||&apos;]&apos;);
&#x9;END IF;
&#x9;-- Validate defaultValuesLayerConstantName
&#x9;IF (defaultValuesLayerConstantName IS NULL OR LENGTH(defaultValuesLayerConstantName) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;defaultValuesLayerConstantName&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;IF (UPPER(defaultValuesLayerConstantName) = &apos;NULL&apos;) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;defaultValuesLayerConstantName&quot; value cannot be &apos;&apos;NULL&apos;&apos;&apos;;
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: defaultValuesLayerConstantName=[&apos;||defaultValuesLayerConstantName||&apos;]&apos;);
&#x9;END IF;
&#x9;-- Validate documentationFileName
&#x9;IF (documentationFileName IS NULL OR LENGTH(documentationFileName) = 0) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;documentationFileName&quot; cannot be null or empty.&apos;;
&#x9;END IF;
&#x9;IF (UPPER(documentationFileName) = &apos;NULL&apos;) THEN
&#x9;&#x9;RAISE ex VALUE moduleName||&apos; : The &quot;documentationFileName&quot; value cannot be &apos;&apos;NULL&apos;&apos;&apos;;
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : INPUT: documentationFileName=[&apos;||documentationFileName||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Validate in_switches
&#x9;IF (UPPER(switches) = &apos;NULL&apos;) THEN
&#x9;&#x9;SET switches = null;
&#x9;END IF;

&#x9;-- Validate in_excludeKeywordsInPathList
&#x9;IF (UPPER(excludeKeywordsInPathList) = &apos;NULL&apos;) THEN
&#x9;&#x9;SET excludeKeywordsInPathList = null;
&#x9;END IF;

&#x9;-- Validate in_excludePathsList
&#x9;IF (UPPER(excludePathsList) = &apos;NULL&apos;) THEN
&#x9;&#x9;SET excludePathsList = null;
&#x9;END IF;

&#x9;-- Get the /_scripts/Documentation/Constants path
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(defaultValuesPath , &apos;defaultValues.documentationScriptsPath_&apos;, 1, documentationConstantsPath);
&#x9;SET documentationConstantsPath = documentationConstantsPath || &apos;/constants&apos;;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: documentationConstantsPath=[&apos;||documentationConstantsPath||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the layer path using the passed in defaultValues constant name
&#x9;IF (SUBSTRING(defaultValuesLayerConstantName_, LENGTH(defaultValuesLayerConstantName_), 1) &lt;&gt; &apos;_&apos;) THEN
&#x9;&#x9;SET defaultValuesLayerConstantName_ = defaultValuesLayerConstantName_ || &apos;_&apos;;
&#x9;END IF;
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(defaultValuesPath , defaultValuesLayerConstantName_, 1, layerResourcePath);
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: defaultValues.&apos;||defaultValuesLayerConstantName_||&apos;=[&apos;||NVL(layerResourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Add the sub-layer path to the layer type path
&#x9;IF (subLayerPartialPath IS NOT NULL AND LENGTH(subLayerPartialPath) &gt; 0) THEN
&#x9;&#x9;SET layerResourcePath = REPLACE(layerResourcePath || &apos;/&apos; || subLayerPartialPath, &apos;//&apos;, &apos;/&apos;);
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: layerResourcePath=[&apos;||NVL(layerResourcePath,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the layer resource type for the path that was returned.
&#x9;SELECT &quot;type&quot; 
&#x9;&#x9;INTO layerResourceType
&#x9;FROM /shared/ASAssets/Utilities/repository/getBasicResourceCursor(layerResourcePath, null);
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: layerResourceType=[&apos;||NVL(layerResourceType,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants parentFilePath
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;parentFilePath&apos;, 1, parentFilePath);
&#x9;SET documentationPath = REPLACE(parentFilePath || &apos;/&apos; || documentationFileName, &apos;//&apos;, &apos;/&apos;);
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: documentationPath=[&apos;||NVL(documentationPath,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants docPreambleImpl
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;docPreambleImpl&apos;, 1, docPreambleImpl);
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: docPreambleImpl=[&apos;||NVL(docPreambleImpl,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants docResourceFormatImpl
&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;docResourceFormatImpl&apos;, 1, docResourceFormatImpl);
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: docResourceFormatImpl=[&apos;||NVL(docResourceFormatImpl,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants switches if applicable
&#x9;IF (switches IS NULL OR LENGTH(switches) = 0) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;switches&apos;, 1, switches);
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: switches=[&apos;||NVL(switches,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants excludeKeywordsInPathList if applicable
&#x9;IF (excludeKeywordsInPathList IS NULL OR LENGTH(excludeKeywordsInPathList) = 0) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;excludeKeywordsInPathList&apos;, 1, excludeKeywordsInPathList);
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: excludeKeywordsInPathList=[&apos;||NVL(excludeKeywordsInPathList,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;-- Get the Documentation constants excludePathsList if applicable
&#x9;IF (excludePathsList IS NULL OR LENGTH(excludePathsList) = 0) THEN
&#x9;&#x9;CALL /shared/ASAssets/Utilities/string/getConstantV2(documentationConstantsPath, &apos;excludePathsList&apos;, 1, excludePathsList);
&#x9;END IF;
&#x9;IF (UPPER(debug) = &apos;Y&apos;) THEN
&#x9;&#x9;CALL PRINT(moduleName||&apos; : DERIVED: excludePathsList=[&apos;||NVL(excludePathsList,&apos;null&apos;)||&apos;]&apos;);
&#x9;END IF;

&#x9;CALL /shared/ASAssets/Utilities/documentation/getDocumentationDriver(
&#x9;&#x9;layerResourcePath, 
&#x9;&#x9;layerResourceType,
&#x9;&#x9;documentationPath,
&#x9;&#x9;docPreambleImpl,
&#x9;&#x9;docResourceFormatImpl,
&#x9;&#x9;documentationConstantsPath,
&#x9;&#x9;switches,
&#x9;&#x9;excludeKeywordsInPathList,
&#x9;&#x9;excludePathsList
&#x9;&#x9;);

EXCEPTION
&#x9;ELSE
&#x9;&#x9;SET message = CAST(CURRENT_EXCEPTION.TRACE AS LONGVARCHAR);
&#x9;&#x9;CALL PRINT(SUBSTRING(message, 1, 63900));
&#x9;&#x9;CALL LOG(message);
END</attribute>
  <attribute name="creationDate" type="LONG">1564263694875</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserId" type="INTEGER">-1973</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="explicitly.designed" type="BOOLEAN">false</attribute>
  <attribute name="impactLevel" type="INTEGER">2</attribute>
  <attribute name="impactMessage" type="STRING">Invalid column name &apos;utilitiesRootPath&apos;.  On line 51, column 52.  [parser-2900650]</attribute>
  <attribute name="lastModifiedDate" type="LONG">1621586406561</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserId" type="INTEGER">-1973</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="model" type="NULL"/>
  <attribute name="native_only" type="STRING">false</attribute>
  <attribute name="public_constants" type="NULL"/>
  <attribute name="public_exceptions" type="NULL"/>
  <attribute name="public_types" type="NULL"/>
  <attribute name="references" type="NULL"/>
  <attribute name="resourceModifiedDateOnSourceCISSite" type="LONG">1564263694875</attribute>
</metadata>